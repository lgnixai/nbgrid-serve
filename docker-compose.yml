version: '3.8'

services:
  # 应用服务
  teable-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: teable-go-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - TEABLE_DATABASE_HOST=postgres
      - TEABLE_DATABASE_USER=postgres
      - TEABLE_DATABASE_PASSWORD=postgres123
      - TEABLE_DATABASE_NAME=teable
      - TEABLE_REDIS_HOST=redis
      - TEABLE_REDIS_PASSWORD=redis123
      - TEABLE_SERVER_MODE=release
      - TEABLE_JWT_SECRET=your-production-jwt-secret-key-change-this
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
      - ./config:/app/config
    networks:
      - teable-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: teable-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: teable
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - teable-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d teable"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: teable-redis
    restart: unless-stopped
    command: redis-server --requirepass redis123 --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - teable-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s

  # MinIO对象存储(可选)
  minio:
    image: minio/minio:latest
    container_name: teable-minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - teable-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Nginx反向代理(可选)
  nginx:
    image: nginx:alpine
    container_name: teable-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - teable-backend
    networks:
      - teable-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local

networks:
  teable-network:
    driver: bridge