# 开发环境 Docker Compose 配置

version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: teable-dev-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: teable_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ../scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - teable-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d teable_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: teable-dev-redis
    restart: unless-stopped
    command: redis-server --requirepass redis123 --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - teable-dev
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # MinIO对象存储(开发环境)
  minio:
    image: minio/minio:latest
    container_name: teable-dev-minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_dev_data:/data
    networks:
      - teable-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # PostgreSQL管理工具
  adminer:
    image: adminer:latest
    container_name: teable-dev-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - teable-dev
    depends_on:
      - postgres

  # Redis管理工具
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: teable-dev-redis-commander
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379:1:redis123
    ports:
      - "8081:8081"
    networks:
      - teable-dev
    depends_on:
      - redis

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  minio_dev_data:
    driver: local

networks:
  teable-dev:
    driver: bridge